pipeline{
    agent any
    
    environment{
        DIRECTORY_PATH = "/project_directory"
        test_env = "Test Env"
        prod_env = "Prod Env"
    }
    stages{
        stage('Build'){
            steps{
                echo "Build the code using Maven."
                echo "compile the code and generate any necessary artifacts"
                //Example build command
                //sh 'mvn clean install'
            }
        }
            stage('Unit and Integration Test'){
                steps{
                    echo"Run unit tests using JUnit and integration tests using TestNG."
                    //validate code functionality
                    //Example Test Command
                    //sh 'mvn test'
                    
                    emailext (
                subject: "Jenkins Build ${env.build_number} - Test Stage ${currentBuild.result}",
                body: " Test stage of build ${env.build_number} has successfully completed with status: SUCCESS.",
                to: 'alenjbenny24deakin@gmail.com',
                attachLog: true
                        )
                }
            }
            
            stage('Code Analysis'){
                steps{
                    echo"check the quality of the code"
                    echo "using sonarqube for checking the code quality"
                    // Example SonarQube command
                    //sh 'mvn sonar:sonar'
                }
            }
            stage('Security scan'){
                steps{
                    echo "Security scan using OWASP Dependency-Check plugin for checking project dependencies for vulnerabilities"
                    // Example security scan command
                    //sh 'dependency-check.sh --project MyApp --scan /path/to/your/code'
            
                    emailext (
                subject: "Jenkins Build ${env.build_number} - Security Scan Stage ${currentBuild.result}",
                body: " The Security Scan stage of build ${env.build_number} has completed with status: SUCCESS.",
                to: 'alenjbenny24deakin@gmail.com',
                attachLog: true
                        )
                }
            }
           
            stage('Deploy'){
                steps{
                     echo "Deploy the application to a staging environment using AWS CLI."
                    //Example deployment command
                    //sh 'aws deploy ...'
                 echo "test environment: ${test_env}"
                }
            }
        stage('Integration Tests on staging'){
                steps{
                     echo "Run integration tests on the staging environment using Selenium and Postman."
                    //Example integration test command
                    //sh 'selenium-server -port 4444 &'
                    //sh 'newman run postman_collection.json'
                echo "Tests complete"
                }
            }
         stage('Deploy to production') { //production deployment
             
             steps{
                 echo "Deploying to production environment: ${prod_env}"
                 echo "Deployed to production!"
             }
       
    }                
        }
   post{
        always{
        emailext (
      subject: "SUCCESSFUL: Job '${env.job_name} [${env.build_number}]'",
      body: """<p>SUCCESSFUL: Job '${env.job_name} [${env.build_number}]':</p>
        <p>Check console output at &QUOT;<a href='${env.build_url}'>${env.job_name} [${env.build_number}]</a>&QUOT;</p>""",
      to: "alenjbenny24deakin@gmail.com"
    )                     
                        
    }
   }
 }
